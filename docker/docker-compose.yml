version: '3.8'

services:
  app:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: finch-app
    ports:
      - "${APP_PORT}:8000"
    volumes:
      - ..:/app
      - /app/venv
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - COINGECKO_API_URL=${COINGECKO_API_URL}
      - API_RATE_LIMIT=${API_RATE_LIMIT}
      - DEBUG=${DEBUG}
      - ENVIRONMENT=${ENVIRONMENT}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - finch-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: finch-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ../.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - finch-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: finch-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - finch-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: finch-pgadmin
    env_file:
      - ../.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    networks:
      - finch-network
    restart: unless-stopped

  alembic:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: finch-alembic
    volumes:
      - ..:/app
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: alembic upgrade head
    depends_on:
      db:
        condition: service_healthy
    networks:
      - finch-network

volumes:
  postgres_data:
    name: finch-postgres-data
  redis_data:
    name: finch-redis-data

networks:
  finch-network:
    name: finch-network
    driver: bridge 